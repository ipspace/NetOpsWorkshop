# -*- mode: ruby -*-
# vi: set ft=ruby :

# Specify minimum Vagrant version and Vagrant API version
Vagrant.require_version ">= 1.6.0"
VAGRANTFILE_API_VER = "2"

# Plugins we require
required_plugins = %w(vagrant-junos vagrant-vbguest vagrant-host-shell)

##### START Helper functions
def install_ssh_key()
  puts "Adding ssh key to the ssh agent"
  puts "ssh-add #{Vagrant.source_root}/keys/vagrant"
  system "ssh-add #{Vagrant.source_root}/keys/vagrant"
end

def install_plugins(required_plugins)
  plugins_to_install = required_plugins.select { |plugin| not Vagrant.has_plugin? plugin }
  if not plugins_to_install.empty?
    puts "Installing plugins: #{plugins_to_install.join(' ')}"
    if system "vagrant plugin install #{plugins_to_install.join(' ')}"
      exec "vagrant #{ARGV.join(' ')}"
    else
      abort "Installation of one or more plugins has failed. Aborting."
    end
  end
end
##### END Helper functions

# Install ssh key
# 
# Uncomment the next line if you're using ssh-agent
# install_ssh_key

# Check certain plugins are installed
install_plugins required_plugins

# Require YAML module
require 'yaml'
 
# Read YAML file with box details
vagrant_root = File.dirname(__FILE__)
hosts = YAML.load_file(vagrant_root + '/topology.yml')

# Lab definition begins here
Vagrant.configure(VAGRANTFILE_API_VER) do |config|
  config.vbguest.auto_update = false

  # Iterate through entries in YAML file
  hosts.each do |host|
    config.vm.define host["name"] do |srv|
      srv.vm.box = host["box"]

      # Next 4 lines are used to solve the issue occuring during serial port creation
      srv.vm.provider :virtualbox do |vb|
	pipeName = host["name"]
        vb.customize ["modifyvm", :id, "--uartmode1", "server", "\\\\.\\pipe\\#{pipeName}"]    
      end

      if host.key?("forwarded_ports")
        host["forwarded_ports"].each do |port|
          srv.vm.network :forwarded_port, guest: port["guest"], host: port["host"], id: port["name"]
        end
      end

      if host.key?("links")
        host["links"].each do |link|
          ipaddr = "169.254.1.11"
          srv.vm.network "private_network", virtualbox__intnet: link["name"], ip: ipaddr, auto_config: false
        end
      end

      if host.key?("memory")
        srv.vm.provider "virtualbox" do |v|
          v.memory = host["memory"]
        end
      end

      # Automatically configure hostnames on vEOS boxes
      if /vEOS/.match(host['box'])
        $script = <<-SCRIPT
          FastCli -p 15 -c "configure
          hostname $1"
        SCRIPT

        srv.vm.provision "shell" do |s|
          s.inline = $script
          s.args = host["name"]
        end
      end

    end
  end
end

